#summary Outline of the requirements for Milestone 1
<wiki:toc max_depth="1" />

= Code Requirements =
 == Source Code Repository ==
  Source code for Luminance can be found here:
  [http://code.google.com/p/cmpt371t1/source/checkout]
 == Daily Build ==
  A daily build is run on !TeamCity to ensure the continuing quality of the software.  It sends and email to every group member when there is an unsuccessful build.  It also prevents committing of code that breaks the build.  This is riding on the notion of fixing bugs on existing functionality before continuing development.
 == Smoke Test, Testing and Hooks ==
  All testing documentation can be viewed here: TestPlan

= Mini-Milestone List =
 The Milestones we have set for this project and the CPM diagram can be viewed here:  MilestonePlan

 CPM Diagram: http://code.google.com/p/cmpt371t1/wiki/MilestonePlan#CPM_Diagram

= Risk Analysis =
 The risk report can be viewed at: RiskReport

= Requirements =
 Requirements can be viewed at: [Requirements]

= Team Roles and Activity Log =
 The team roles can be found at: http://code.google.com/p/cmpt371t1/people/list

 The activity log can be viewed at: ProjectMemberTime

= Code Reviews =
 The code review process is documented at CodeReviewProcess.

= GUI Prototype =
 A video of the previous implementation of the game can be viewed here: [http://code.google.com/p/cmpt371t1/]

 Our ported version is meant to mimic the user interface of this very closely.

 Here are some pictures of how our user interface will look with the touch screen functionality: [GUIPrototypes]

= Initial Analysis for Deliverable 2 =
 == Deliverable plan ==
 Any project artifacts that were modified or created since the first milestone will be part of Deliverable 2.

  The following new artifacts are anticipated:
   * Updated Risk Report - Includes an updated analysis of previous risks, as well as new risks that have been introduced
   * Version Control Strategy - How to ensure that developers do not commit code that will compromise the build
   * Basic GUI Test Suite - How we plan to test the GUI elements of the project
   * jUnit Test Suite - The unit test suite
   * jCoverage Test Suite - The code coverage test suite
   * Software Quality - The latest measurements of quality
   * Game Level Editor - A tool to create new game levels

  In addition, the following implementation-specific tasks are anticipated:
   * Alpha Version Complete - A working alpha version of the game should be complete
   * Level Format - The game level format will be analyzed and implemented


 == Estimate of size and time ==
|| *Task* || *Estimate time (hours)* ||
|| Alpha version of game || 24 ||
|| GUI test suite basics || 6 ||
|| Android asset manager || 4 ||
|| Game level file format analyzed || 2 ||
|| Game level file format implemented || 4 ||
|| Game level editor || 4 ||
|| jCoverage test suite || 8 ||
|| jUnit test suite || 8 ||